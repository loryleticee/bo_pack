<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Meeting extends \App\Entity\Meeting implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'congres', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'start_date', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'end_date', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'is_open', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'is_reserved', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'reason', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'isCancel', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'reasonCancel', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'customer'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'congres', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'start_date', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'end_date', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'is_open', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'is_reserved', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'reason', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'isCancel', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'reasonCancel', '' . "\0" . 'App\\Entity\\Meeting' . "\0" . 'customer'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Meeting $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCongres(): ?\App\Entity\Congres
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCongres', []);

        return parent::getCongres();
    }

    /**
     * {@inheritDoc}
     */
    public function setCongres(?\App\Entity\Congres $congres): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCongres', [$congres]);

        return parent::setCongres($congres);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate(\DateTimeInterface $start_date): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$start_date]);

        return parent::setStartDate($start_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate(\DateTimeInterface $end_date): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$end_date]);

        return parent::setEndDate($end_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOpen(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOpen', []);

        return parent::getIsOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOpen(bool $is_open): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOpen', [$is_open]);

        return parent::setIsOpen($is_open);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsReserved(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsReserved', []);

        return parent::getIsReserved();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsReserved(bool $is_reserved): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsReserved', [$is_reserved]);

        return parent::setIsReserved($is_reserved);
    }

    /**
     * {@inheritDoc}
     */
    public function getReason(): ?\App\Entity\Reason
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReason', []);

        return parent::getReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setReason(?\App\Entity\Reason $reason): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReason', [$reason]);

        return parent::setReason($reason);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsCancel(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsCancel', []);

        return parent::getIsCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsCancel(?bool $isCancel): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsCancel', [$isCancel]);

        return parent::setIsCancel($isCancel);
    }

    /**
     * {@inheritDoc}
     */
    public function getReasonCancel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReasonCancel', []);

        return parent::getReasonCancel();
    }

    /**
     * {@inheritDoc}
     */
    public function setReasonCancel(?string $reasonCancel): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReasonCancel', [$reasonCancel]);

        return parent::setReasonCancel($reasonCancel);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer(): ?\App\Entity\Customer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(?\App\Entity\Customer $customer): \App\Entity\Meeting
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

}
