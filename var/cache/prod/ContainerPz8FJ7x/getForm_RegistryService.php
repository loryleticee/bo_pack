<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistryInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistry.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormExtensionInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DependencyInjection'.\DIRECTORY_SEPARATOR.'DependencyInjectionExtension.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactoryInterface.php';
include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactory.php';

return $this->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'App\\Form\\Back\\CatDocCreationType' => ['privates', 'App\\Form\\Back\\CatDocCreationType', 'getCatDocCreationTypeService.php', true],
    'App\\Form\\Back\\CatUserCreationType' => ['privates', 'App\\Form\\Back\\CatUserCreationType', 'getCatUserCreationTypeService.php', true],
    'App\\Form\\Back\\CongresCreationType' => ['privates', 'App\\Form\\Back\\CongresCreationType', 'getCongresCreationTypeService.php', true],
    'App\\Form\\Back\\CongresEditType' => ['privates', 'App\\Form\\Back\\CongresEditType', 'getCongresEditTypeService.php', true],
    'App\\Form\\Back\\DocCreationType' => ['privates', 'App\\Form\\Back\\DocCreationType', 'getDocCreationTypeService.php', true],
    'App\\Form\\Back\\DocEditType' => ['privates', 'App\\Form\\Back\\DocEditType', 'getDocEditTypeService.php', true],
    'App\\Form\\Back\\ReasonCreationType' => ['privates', 'App\\Form\\Back\\ReasonCreationType', 'getReasonCreationTypeService.php', true],
    'App\\Form\\Back\\UserCreationType' => ['privates', 'App\\Form\\Back\\UserCreationType', 'getUserCreationTypeService.php', true],
    'App\\Form\\Back\\UserEditType' => ['privates', 'App\\Form\\Back\\UserEditType', 'getUserEditTypeService.php', true],
    'App\\Form\\Front\\CustomerCreationType' => ['privates', 'App\\Form\\Front\\CustomerCreationType', 'getCustomerCreationTypeService.php', true],
    'App\\Form\\Front\\RefuseMeetingType' => ['privates', 'App\\Form\\Front\\RefuseMeetingType', 'getRefuseMeetingTypeService.php', true],
    'App\\Form\\Front\\SecurityCongresType' => ['privates', 'App\\Form\\Front\\SecurityCongresType', 'getSecurityCongresTypeService.php', true],
    'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', 'form.type.file', 'getForm_Type_FileService.php', true],
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService.php', true],
], [
    'App\\Form\\Back\\CatDocCreationType' => '?',
    'App\\Form\\Back\\CatUserCreationType' => '?',
    'App\\Form\\Back\\CongresCreationType' => '?',
    'App\\Form\\Back\\CongresEditType' => '?',
    'App\\Form\\Back\\DocCreationType' => '?',
    'App\\Form\\Back\\DocEditType' => '?',
    'App\\Form\\Back\\ReasonCreationType' => '?',
    'App\\Form\\Back\\UserCreationType' => '?',
    'App\\Form\\Back\\UserEditType' => '?',
    'App\\Form\\Front\\CustomerCreationType' => '?',
    'App\\Form\\Front\\RefuseMeetingType' => '?',
    'App\\Form\\Front\\SecurityCongresType' => '?',
    'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
    'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.form.transformation_failure_handling'] ?? ($this->privates['form.type_extension.form.transformation_failure_handling'] = new \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension(NULL)));
    yield 1 => ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
    yield 2 => ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
    yield 3 => ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
}, 4), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.repeated.validator'] ?? ($this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_extension.submit.validator'] ?? ($this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
}, 1)], new RewindableGenerator(function () {
    yield 0 => ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
    yield 1 => ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 2))], new \Symfony\Component\Form\ResolvedFormTypeFactory());
